// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainStationsAPI.Database;

#nullable disable

namespace TrainStationsAPI.Migrations
{
    [DbContext(typeof(TrainStationsContext))]
    [Migration("20231001034750_SeedDatabase")]
    partial class SeedDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("LineTrainStation", b =>
                {
                    b.Property<long>("LinesLineId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StationsTrainStationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LinesLineId", "StationsTrainStationId");

                    b.HasIndex("StationsTrainStationId");

                    b.ToTable("LineTrainStation");
                });

            modelBuilder.Entity("TrainStationsAPI.Models.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Neighbourhood")
                        .HasColumnType("TEXT");

                    b.Property<string>("PublicPlace")
                        .HasColumnType("TEXT");

                    b.Property<string>("Uf")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("TrainStationsAPI.Models.Line", b =>
                {
                    b.Property<long>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<double>("Extension")
                        .HasColumnType("REAL");

                    b.Property<double>("Gauge")
                        .HasColumnType("REAL");

                    b.Property<int>("LineNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LineOperator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LineId");

                    b.ToTable("Lines");

                    b.HasData(
                        new
                        {
                            LineId = 1L,
                            Color = "Azul",
                            Extension = 20.199999999999999,
                            Gauge = 1.6000000000000001,
                            LineNumber = 1,
                            LineOperator = "Metrô SP"
                        },
                        new
                        {
                            LineId = 2L,
                            Color = "Verde",
                            Extension = 14.699999999999999,
                            Gauge = 1.6000000000000001,
                            LineNumber = 2,
                            LineOperator = "Metrô SP"
                        },
                        new
                        {
                            LineId = 3L,
                            Color = "Vermelha",
                            Extension = 22.0,
                            Gauge = 1.6000000000000001,
                            LineNumber = 3,
                            LineOperator = "Metrô SP"
                        },
                        new
                        {
                            LineId = 4L,
                            Color = "Amarela",
                            Extension = 12.800000000000001,
                            Gauge = 1.4350000000000001,
                            LineNumber = 4,
                            LineOperator = "Via Quatro"
                        },
                        new
                        {
                            LineId = 5L,
                            Color = "Lilas",
                            Extension = 20.0,
                            Gauge = 1.4350000000000001,
                            LineNumber = 5,
                            LineOperator = "Via Mobilidade"
                        },
                        new
                        {
                            LineId = 6L,
                            Color = "Rubi",
                            Extension = 60.0,
                            Gauge = 1.6000000000000001,
                            LineNumber = 7,
                            LineOperator = "CPTM"
                        },
                        new
                        {
                            LineId = 7L,
                            Color = "Diamante",
                            Extension = 41.600000000000001,
                            Gauge = 1.6000000000000001,
                            LineNumber = 8,
                            LineOperator = "Via Mobilidade"
                        },
                        new
                        {
                            LineId = 8L,
                            Color = "Esmeralda",
                            Extension = 37.299999999999997,
                            Gauge = 1.6000000000000001,
                            LineNumber = 9,
                            LineOperator = "Via Mobilidade"
                        },
                        new
                        {
                            LineId = 9L,
                            Color = "Turquesa",
                            Extension = 38.299999999999997,
                            Gauge = 1.6000000000000001,
                            LineNumber = 10,
                            LineOperator = "CPTM"
                        },
                        new
                        {
                            LineId = 10L,
                            Color = "Coral",
                            Extension = 50.5,
                            Gauge = 1.6000000000000001,
                            LineNumber = 11,
                            LineOperator = "CPTM"
                        },
                        new
                        {
                            LineId = 11L,
                            Color = "Safira",
                            Extension = 39.0,
                            Gauge = 1.6000000000000001,
                            LineNumber = 12,
                            LineOperator = "CPTM"
                        },
                        new
                        {
                            LineId = 12L,
                            Color = "Jade",
                            Extension = 12.199999999999999,
                            Gauge = 1.6000000000000001,
                            LineNumber = 13,
                            LineOperator = "CPTM"
                        },
                        new
                        {
                            LineId = 13L,
                            Color = "Prata",
                            Extension = 14.4,
                            Gauge = 0.0,
                            LineNumber = 15,
                            LineOperator = "Metrô SP"
                        });
                });

            modelBuilder.Entity("TrainStationsAPI.Models.TrainStation", b =>
                {
                    b.Property<int>("TrainStationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OpeningYear")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StationAddressId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TrainStationId");

                    b.HasIndex("StationAddressId");

                    b.ToTable("TrainStations");
                });

            modelBuilder.Entity("LineTrainStation", b =>
                {
                    b.HasOne("TrainStationsAPI.Models.Line", null)
                        .WithMany()
                        .HasForeignKey("LinesLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainStationsAPI.Models.TrainStation", null)
                        .WithMany()
                        .HasForeignKey("StationsTrainStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrainStationsAPI.Models.TrainStation", b =>
                {
                    b.HasOne("TrainStationsAPI.Models.Address", "StationAddress")
                        .WithMany()
                        .HasForeignKey("StationAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StationAddress");
                });
#pragma warning restore 612, 618
        }
    }
}
